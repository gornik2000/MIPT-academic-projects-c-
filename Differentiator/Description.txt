Differentiator:
The original expression is accepted without spaces as a formula in the traditional 
mathematical notation in the <data.txt> file (x, y, z variables are supported).
The required number of derivatives are printed in <out.pdf>

New functions, constants and variables are added by adding to Operations.h using
the principle specified there

Implementation:
The source data by recursive descent parser is converted into a binary tree, 
and then a node of the derivative is created recursively instead of each node 
according to mathematical rules described in Operations.h (code generation by macros).

Note:
Due to limited time, class variables are made public, the code is generated by macros 
instead of scripts, and the project itself is written in a slightly C-like manner.